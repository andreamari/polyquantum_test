name: Autosave issue or comment to Markdown

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

permissions:
  contents: write

jobs:
  autosave:
    if: >
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@autosave-to-new-file') || contains(github.event.issue.body, '@autosave-to-last-file'))) ||
      (github.event_name == 'issue_comment' && (contains(github.event.comment.body, '@autosave-to-new-file') || contains(github.event.comment.body, '@autosave-to-last-file')))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set folder
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          FOLDER="docs/$ISSUE_NUMBER"
          mkdir -p "$FOLDER"
          echo "FOLDER=$FOLDER"

      - name: Determine prefix and content
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          FOLDER="docs/$ISSUE_NUMBER"

          # Get highest numeric prefix from existing files
          LAST_PREFIX=$(ls "$FOLDER"/[0-9]*-*.md 2>/dev/null | sed -E 's#.*/([0-9]+)-.*#\1#' | sort -n | tail -1)
          if [ -z "$LAST_PREFIX" ]; then
            LAST_PREFIX=0
          fi

          # Determine event type and body
          if [ "${GITHUB_EVENT_NAME}" == "issues" ]; then
            BODY="${{ github.event.issue.body }}"
            INCLUDE_TITLE="true"
            TRIGGER="@autosave-in-new-file"  # auto-save issues by default
          else
            BODY="${{ github.event.comment.body }}"
            INCLUDE_TITLE="false"
            TRIGGER="@autosave-in-new-file @autosave-in-last-file"
          fi

          # Check if comment triggers autosave
          if [ "${GITHUB_EVENT_NAME}" == "issue_comment" ]; then
            if [[ "$BODY" != *"@autosave-in-new-file"* && "$BODY" != *"@autosave-in-last-file"* ]]; then
              echo "No trigger found, skipping autosave"
              exit 0
            fi
          fi

          # Determine prefix
          if [[ "$BODY" == *"@autosave-in-new-file"* ]]; then
            NEXT_PREFIX=$((LAST_PREFIX + 1))
          else
            NEXT_PREFIX=$LAST_PREFIX
          fi

          # Remove trigger commands
          BODY_CLEAN=$(echo "$BODY" | sed -E 's/@autosave-in-new-file//g; s/@autosave-in-last-file//g')

          # Export variables
          echo "NEXT_PREFIX=$NEXT_PREFIX" >> $GITHUB_ENV
          echo "BODY_CLEAN<<EOF" >> $GITHUB_ENV
          echo "$BODY_CLEAN" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "INCLUDE_TITLE=$INCLUDE_TITLE" >> $GITHUB_ENV

      - name: Create Markdown file
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          FOLDER="docs/$ISSUE_NUMBER"
          PREFIX=$NEXT_PREFIX
          FILENAME="$FOLDER/$PREFIX-autosaved-comment.md"

          # Start the file
          if [ "$INCLUDE_TITLE" = "true" ]; then
            echo "# ${{ github.event.issue.title }}" > "$FILENAME"
            echo "" >> "$FILENAME"
          else
            echo "" > "$FILENAME"
          fi

          # Append body safely (preserves LaTeX and special chars)
          cat <<EOF >> "$FILENAME"
$BODY_CLEAN
EOF

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/${{ github.event.issue.number }}/*.md
          git commit -m "Autosave content in issue #${{ github.event.issue.number }} to Markdown" || echo "No changes to commit"
          git push
