name: Save Issues and Comments

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

permissions:
  contents: write

jobs:
  save-to-markdown:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine trigger and prepare folder
        id: prepare
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "issues" ]]; then
            content=$(jq -r '.issue.body' "$GITHUB_EVENT_PATH")
            title=$(jq -r '.issue.title' "$GITHUB_EVENT_PATH")
            issue_number=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")
          else
            content=$(jq -r '.comment.body' "$GITHUB_EVENT_PATH")
            title=""
            issue_number=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")
          fi

          # Detect trigger
          if echo "$content" | grep -q '@save-to-new-file'; then
            trigger=new
          elif echo "$content" | grep -q '@save-to-last-file'; then
            trigger=last
          else
            echo "No trigger found, exiting."
            exit 0
          fi

          # Remove trigger keywords
          content=$(echo "$content" | sed 's/@save-to-new-file//g; s/@save-to-last-file//g')

          # Skip if content is empty
          if [[ -z "$(echo "$content" | tr -d '[:space:]')" ]]; then
            echo "No content to save after removing trigger. Exiting."
            exit 0
          fi

          # Prepare folder
          folder=docs/$issue_number
          mkdir -p "$folder"

          # Determine file index
          if [[ "$trigger" == "new" ]]; then
            last_index=$(ls -1 $folder/[0-9]*-autosaved_comment.md 2>/dev/null | sed 's/-.*//' | sort -n | tail -1)
            if [[ -z "$last_index" ]]; then
              index=1
            else
              index=$((last_index+1))
            fi
          else
            last_index=$(ls -1 $folder/[0-9]*-autosaved_comment.md 2>/dev/null | sed 's/-.*//' | sort -n | tail -1)
            if [[ -z "$last_index" ]]; then
              index=1
            else
              index=$last_index
            fi
          fi

          filename="$folder/${index}-autosaved_comment.md"

          echo "FILENAME=$filename" >> $GITHUB_OUTPUT
          echo "CONTENT<<EOF" >> $GITHUB_OUTPUT
          echo "$content" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "TITLE=$title" >> $GITHUB_OUTPUT

      - name: Write file safely
        run: |
          # Write the file preserving all LaTeX symbols
          if [[ -n "${{ steps.prepare.outputs.TITLE }}" ]]; then
            echo "# ${{ steps.prepare.outputs.TITLE }}" > "${{ steps.prepare.outputs.FILENAME }}"
            echo "" >> "${{ steps.prepare.outputs.FILENAME }}"
          fi
          printf '%s\n' "${{ steps.prepare.outputs.CONTENT }}" >> "${{ steps.prepare.outputs.FILENAME }}"

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/
          git commit -m "Autosave issue/comment #${{ steps.prepare.outputs.FILENAME }}" || echo "No changes to commit"
          git push
