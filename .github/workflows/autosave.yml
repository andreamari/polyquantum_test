name: Save Issues and Comments


on:
issues:
types: [opened, edited]
issue_comment:
types: [created, edited]


jobs:
save-to-markdown:
runs-on: ubuntu-latest
steps:
- name: Extract content
id: extract
shell: bash
run: |
echo "event_name=${{ github.event_name }}" >> $GITHUB_OUTPUT
echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT


if [ "${{ github.event_name }}" = "issues" ]; then
content="${{ github.event.issue.body }}"
title="${{ github.event.issue.title }}"
else
content="${{ github.event.comment.body }}"
title=""
fi


# Use a unique delimiter so the body cannot accidentally close the heredoc
delimiter=$(uuidgen)
echo "content<<$delimiter" >> $GITHUB_OUTPUT
echo "$content" >> $GITHUB_OUTPUT
echo "$delimiter" >> $GITHUB_OUTPUT


delimiter=$(uuidgen)
echo "title<<$delimiter" >> $GITHUB_OUTPUT
echo "$title" >> $GITHUB_OUTPUT
echo "$delimiter" >> $GITHUB_OUTPUT


- name: Check for triggers
id: check
shell: bash
run: |
content="${{ steps.extract.outputs.content }}"
if echo "$content" | grep -q "@save-to-new-file"; then
echo "trigger=new" >> $GITHUB_OUTPUT
elif echo "$content" | grep -q "@save-to-last-file"; then
echo "trigger=last" >> $GITHUB_OUTPUT
else
echo "trigger=none" >> $GITHUB_OUTPUT
fi


- name: Stop if no trigger
if: ${{ steps.check.outputs.trigger == 'none' }}
run: |
echo "No trigger found, exiting."
exit 0


- name: Checkout repository
if: ${{ steps.check.outputs.trigger != 'none' }}
uses: actions/checkout@v3


- name: Process trigger
if: ${{ steps.check.outputs.trigger != 'none' }}
id: process
shell: bash
run: |
issue_number=${{ steps.extract.outputs.issue_number }}
content="${{ steps.extract.outputs.content }}"
title="${{ steps.extract.outputs.title }}"
trigger=${{ steps.check.outputs.trigger }}


# Remove trigger keywords from the content
content=$(echo "$content" | sed 's/@save-to-new-file//g; s/@save-to-last-file//g')


# If content is empty (only triggers / whitespace), don't create a file
stripped=$(echo "$content" | tr -d '[:space:]')
if [ -z "$stripped" ]; then
echo "filename=" >> $GITHUB_OUTPUT
echo "No non-trigger content to save. Exiting."
exit 0
fi


mkdir -p docs/$issue_number
cd docs/$issue_number


if [ "$trigger" = "new" ]; then
last_index=$(ls -1 [0-9]*-autosaved_comment.md 2>/dev/null | sed 's/-.*//' | sort -n | tail -1)
if [ -z "$last_index" ]; then
index=1
else
index=$((last_index+1))
fi
filename="${index}-autosaved_comment.md"
else
last_index=$(ls -1 [0-9]*-autosaved_comment.md 2>/dev/null | sed 's/-.*//' | sort -n | tail -1)
if [ -z "$last_index" ]; then
index=1
else
index=$last_index
fi
